@using Hospital_Management_System.Models
@model Hospital_Management_System.Models.MedicalTest

@{
    ViewBag.Title = "AddLaboratoryTest";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="row">
    <ol class="breadcrumb">
        <li>
            <a href="#">
                <em class="fa fa-home"></em>
            </a>
        </li>
        <li class="active">Laboratory</li>
        <li class="active">Add Laboratory Test</li>
    </ol>
</div>

<h3>Add Laboratory Test</h3>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ChargesPerTest, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ChargesPerTest, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ChargesPerTest, "", new { @class = "text-danger" })
            </div>
        </div>
        
        @{
            var items = new List<DepartmentStatus>
            {
                new DepartmentStatus {Name = "Active"},
                new DepartmentStatus {Name = "Inactive"}
            };
        }

        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Status, new SelectList(items, "Name", "Name"), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-success"/>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "LaboratoryTestList")
</div>

@section scripts {
    @Scripts.Render("~/bundles/jqueryval")
}